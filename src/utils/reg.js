// 记录页面常用的一些正则表达

// export const urlReg = /(((^https?:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)$/g;



// const urlStrRegx = '^((https|http|ftp)://)?'//(https或http或ftp):// 可有可无
// 			+ '(([\\w_!~*\'()\\.&=+$%-]+: )?[\\w_!~*\'()\\.&=+$%-]+@)?' //ftp的user@  可有可无
// 			+ '(([0-9]{1,3}\\.){3}[0-9]{1,3}' // IP形式的URL- 3位数字.3位数字.3位数字.3位数字
// 			+ '|' // 允许IP和DOMAIN（域名） 
// 			+ '(localhost)|'	//匹配localhost
// 			+ '([\\w_!~*\'()-]+\\.)*' // 域名- 至少一个[英文或数字_!~*\'()-]加上.
// 			+ '\\w+\\.' // 一级域名 -英文或数字  加上.
// 			+ '[a-zA-Z]{1,6})' // 顶级域名- 1-6位英文 
// 			+ '(:[0-9]{1,5})?' // 端口- :80 ,1-5位数字
// 			+ '((/?)|' // url无参数结尾 - 斜杆或这没有
// 			+ '(/[\\w_!~*\'()\\.;?:@&=+$,%#-]+)+/?)$';//请求参数结尾- 英文或数字和[]内的各种字符

const str = "((http|https|Http|Https|rtsp|Rtsp|http|www|ftp)://)?(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,4})*(/[a-zA-Z0-9\\&#,!%_\\./-~-]*)?"


export const urlReg = new RegExp(str, "g");



export const faceReg = /\[[\u4E00-\u9FA5]{1,}\]/g;
